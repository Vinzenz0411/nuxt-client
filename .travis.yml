branches:
  only:
    - develop
    - master
    - /^(hotfix|feature|release|dependabot)\/.*$/
language: node_js
node_js:
  - lts/*
dist: xenial
git:
  submodules: false
env:
  global:
    - TZ=Europe/Berlin
    - GIT_SHA=$( git rev-parse HEAD )
    # DOCKERTAG for feature branches will be overwritten in build.sh
    - DOCKERTAG="$( echo $TRAVIS_BRANCH | tr -s '[:punct:]' '-' | tr -s '[:upper:]' '[:lower:]' )_v$( jq -r '.version' package.json )_$TRAVIS_COMMIT"

stages:
  - build_and_push
  - deploy_documentation

jobs:
  include:
    # Build
    - stage: deploy_documentation
    - script: npm run build:storybook
      name: "build:storybook"
      after_success:
        - npm i -g surge
        - bash ./deploy/pull-deploy.sh -p storybook
    - script: npm run build:docs
      name: "build:docs"
      after_success:
        - npm i -g surge
        - bash ./deploy/pull-deploy.sh -p vuepress

    # Build Docker Images
    - stage: build_and_push
      name: build:nuxt
      language: generic
      script: bash ./deploy/build.sh -p client
    - script: bash ./deploy/build.sh -p storybook
      name: build:storybook
      language: generic
    - script: bash ./deploy/build.sh -p vuepress
      name: build:docs
      language: generic

cache: npm
before_cache:
  # delete all .cache folders before actually storing the cache.
  # nuxt, storybook and vuepress stores some build artefacts here which invalidates the cache.
  - cd node_modules && find . -name .cache -type d -exec rm -rf {} + && cd ..
  - cd node_modules && find . -name .temp -type d -exec rm -rf {} + && cd ..
